
name: Deploy Production to GooseHQ

on:
  workflow_dispatch:
  push:
    branches:
      - "production"


jobs:
  build-backend:
    name: Build backend image from production
    runs-on: ubuntu-latest
    environment: production
    env:
      WALLET_DB_URI: ${{ secrets.WALLET_DB_URI }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PORT: ${{ vars.PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SCB_API_KEY: ${{ secrets.SCB_API_KEY }}
      SCB_API_SECRET: ${{ secrets.SCB_API_SECRET }}
      SCB_BILLER_ID: ${{ secrets.SCB_BILLER_ID }}
      SCB_MERCHANT_ID: ${{ secrets.SCB_MERCHANT_ID }}
      SCB_TERMINAL_ID: ${{ secrets.SCB_TERMINAL_ID }}
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push 
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:crafty-backend"
          push: true
          tags: kuranasaki/crafty-backend:latest,kuranasaki/crafty-backend:${{ github.sha }}
          load: true
          cache-from: type=gha,scope=global
          cache-to: type=gha,mode=max,scope=global
          platforms: linux/amd64
  build-frontend:
    name: Build frontend image from production
    runs-on: ubuntu-latest
    environment: production
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
      NEXT_PUBLIC_API_ENDPOINT: ${{ vars.NEXT_PUBLIC_API_ENDPOINT }}
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push 
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:crafty-frontend"
          push: true
          tags: kuranasaki/crafty-frontend:latest,kuranasaki/crafty-frontend:${{ github.sha }}
          load: true
          cache-from: type=gha,scope=global
          cache-to: type=gha,mode=max,scope=global
          platforms: linux/amd64
          build_args: |
            "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}"
            "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}"
            "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}"
            "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}"
            "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}"
            "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}"
            "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}"
            "NEXT_PUBLIC_API_ENDPOINT=https://crafty.thegoose.work"
  deploy:
    name: Deploy to GooseHQ
    needs: 
      - build-backend
      - build-frontend
    if: ${{ always() && !cancelled() && needs.build-backend.result == 'success' && needs.build-frontend.result == 'success' }}
    runs-on: self-hosted
    environment: production
    env:
      WALLET_DB_URI: ${{ secrets.WALLET_DB_URI }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PORT: ${{ vars.PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SCB_API_KEY: ${{ secrets.SCB_API_KEY }}
      SCB_API_SECRET: ${{ secrets.SCB_API_SECRET }}
      SCB_BILLER_ID: ${{ secrets.SCB_BILLER_ID }}
      SCB_MERCHANT_ID: ${{ secrets.SCB_MERCHANT_ID }}
      SCB_TERMINAL_ID: ${{ secrets.SCB_TERMINAL_ID }}
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
      NEXT_PUBLIC_API_ENDPOINT: ${{ vars.NEXT_PUBLIC_API_ENDPOINT }}

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: production
      - name: Pull Image to GooseHQ
        run: docker compose pull
      - name: Deploy to GooseHQ
        run: docker compose up -d